@model DBESearch.ViewModels.CompanySearchViewModel
@{
    ViewBag.Title = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section scripts{
    @*@Scripts.Render("~/bundles/jqueryui")*@
    <style>
         p, .row, .panel-body {
            color: #474747;
            font-family: Arial;
        }   
    </style>
    <script type="text/javascript">

        function clearform() {   
            $('#DBESearchForm')[0].reset();
            $('#States').multiselect('refresh');
            $('#OwnerZipCodes').multiselect('refresh');
            $('.mdb-select').multiselect('refresh');
            $('#ItemCodesList').multiselect('refresh');
            $('#Cities').multiselect('refresh');
            $('#Districts').multiselect('refresh');
            $('#Counties').multiselect('refresh');
            };                                           

        function clearNAICS() {
            $('#NAICSddl').multiselect('deselectAll', false);
            $('#NAICSddl').multiselect('updateButtonText');         
        };
        function clearItemCodes() {
            $('#Itemddl').multiselect('deselectAll', false);
            $('#Itemddl').multiselect('updateButtonText');
        };
        function clearCities() {
            $('#Cities').multiselect('deselectAll', false);
            $('#Cities').multiselect('updateButtonText');
        };
        function clearStates() {
            $('#States').multiselect('deselectAll', false);
            $('#States').multiselect('updateButtonText');
        };
        function clearOwnerZipCodes() {
            $('#OwnerZipCodes').multiselect('deselectAll', false);
            $('#OwnerZipCodes').multiselect('updateButtonText');
        };
        function clearDistricts() {            
            $('#Districts').multiselect('deselectAll', false);
            $('#Districts').multiselect('updateButtonText');
        };
        function clearCounties() {            
            $('#Counties').multiselect('deselectAll', false);
            $('#Counties').multiselect('updateButtonText');
        };
        $('#States').multiselect({
            maxHeight: 200,
            nonSelectedText: 'Select State(s)',
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            buttonWidth: '300px',
            includeSelectAllOption: true,
        });

        $('#OwnerZipCodes').multiselect({
            maxHeight: 200,
            nonSelectedText: 'Select Zipcode(s)',
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            buttonWidth: '300px',
            
        });
        $('.mdb-select').multiselect({
            maxHeight: 200,
            nonSelectedText: "Search Code(s)",
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            buttonWidth: '150px',
        });
        $('#ItemCodesList').multiselect({
            maxHeight: 200,
            nonSelectedText: "Search Item Code(s)",
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            buttonWidth: '150px',
            
        });

        $('#Cities').multiselect({
            maxHeight: 200,
            nonSelectedText: "Select one or more Cities",
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            buttonWidth: '300px',
        });

        $('#Districts').multiselect({
            maxHeight: 200,
            nonSelectedText: "Select one or more Districts",
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            buttonWidth: '300px'
        });

        $('#Counties').multiselect({
            maxHeight: 200,
            nonSelectedText: "Select one or more Counties",
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            buttonWidth: '300px'
        });        

        //Generates the NAICS Codes list to choose from
        function getForm() {
            $('#dialog').dialog({
                autoOpen: true,
                width: 800,
                height: 400,
                resizable: true,
                position: {my: "center", at: "center", of: window},
                title: 'NAICS Codes',
                modal: true,
                open: function (event, ui) {
                    $(this).load('@Url.Action("PartialForm", "DBECompany")');
                },
                click: $("#dialog").on("click", "#NAICSCodesTable tr", function (event) { var rowdata = $(this).children("td").map(function () { return $(this).text();}).get();  $('#NAICS').val(rowdata[0]); }),

                buttons: {
                    "Close": function () {
                        $(this).dialog("close");
                    },
                }
            });
        }

        //Generates the Departmental Item Codes list to choose from
        function getItemCodeForm() {
            $('#ItemCodedialog').dialog({
                autoOpen: true,
                width: 800,
                height: 400,
                resizable: true,
                position: { my: "center", at: "center", of: window },
                title: 'Item Codes',
                modal: true,
                open: function (event, ui) {
                    $(this).load('@Url.Action("ItemPartialForm", "DBECompany")');
                },
                click: $("#ItemCodedialog").on("click", "#ItemCodesTable tr", function (event) { var rowdata = $(this).children("td").map(function () { return $(this).text(); }).get(); $('#Item').val(rowdata[0]); }),

                buttons: {
                    "Close": function () {
                        $(this).dialog("close");
                    },
                }
            });
            }
        //$('#DBESearchForm').keypress(function (e) { alert("Return Key Punched"); })
            //if (e.which === 13) {
        //        $('#Search').trigger('click');
        //        //e.preventDefault();
        //        //return false;
        //    }
        $('#Search').on('click', function (event) {

            if (!$('#DBE:checkbox').is(':checked') && !$('#ACDBE:checkbox').is(':checked') && !$('#SBP:checkbox').is(':checked') && !$('#MBE:checkbox').is(':checked')) {
                alert('You must choose at Least one Certification');
            }
            else {
                var naicsCodes = $('#NAICS').val();
                var naicsArray = new Array();
                var re = /(\w+)\s\-\s.*/;

                var itemCodes = $('#ItemCode').val();
                var itemsArray = new Array();
                var regexp = /(\w+)\s\-\s.*/;

                var districts = $('#Districts').val();
                var districtarray = new Array();
                var regex = /(\w+)\s\-\s.*/;

                if (naicsCodes) {
                    naicsCodes.forEach(function (item, i, a) {
                        var parsedString = item.replace(re, '$1')
                        naicsArray.push(parsedString);
                    });
                }

                if (itemCodes) {
                    itemCodes.forEach(function (item, i, a) {
                        var parsedString = item.replace(re, '$1')
                        itemsArray.push(parsedString);
                    });
                }

                if (districts) {
                    districts.forEach(function (item, i, a) {
                        var parsedString = item.replace(/\D+/g, '')
                        districtarray.push(parsedString);
                    });
                }

                var formdata = {
                    DBE: $('#DBE').is(':checked')
                    , ACDBE: $('#ACDBE').is(':checked')
                    , SBP: $('#SBP').is(':checked')
                    , MBE: $('#MBE').is(':checked')
                    , Company: $('#Company').val()
                    , CompanyId: $('#currentCompanyId').val()
                    , BusinessDescription: $('#BusinessDescription').val()
                    , NAICS: naicsArray
                    , ItemCode: itemsArray
                    , OwnerFirstName: $('#OwnerFirstName').val()
                    , OwnerLastName: $('#OwnerLastName').val()
                    , Cities: $('#Cities').val()
                    , States: $('#States').val()
                    , OwnerZipCodes: $('#OwnerZipCodes').val()
                    , County: $('#Counties').val()
                    , AreaCode: $('#AreaCode').val()
                    , Districts: districtarray
                };
                $.ajax({
                    method: 'POST',
                    datatype: 'html',
                    data: formdata,
                    url: '@Url.Action("SearchResults")',
                    success: function (data) {
                        $('#SearchResultsContainer').html(data);
                    }
                });

            }
        });



        @*$("#Company").autocomplete({
            minLength: 2,
            delay: 0,
            source: '@Url.Action("companies", "DBECompany")',
            select: function (event, ui) {
                if (ui.item.data) {
                    $('#currentCompanyId').val(ui.item.data.CompanyId);
                }
            },
            error: function (data) {
                $("#companyList").removeClass('ui-autocomplete-loading');
            }
        }).keypress(function (e) {
            if (e.which === 13)
                window.location = '@Url.Action("Index")?q=' + this.value;
        });*@
    


        $("#BusinessDescription").autocomplete({
            delay: 0,
            minLength: 2,
            source: '@Url.Action("GetBusinessDescription","DBECompany")',
            select: function (event, ui) {
                if (ui.item.data)
                    $("#currentBusinessDescription").val(ui.item.data.BusinessDescription);
            },
            error: function (data) {
                $("#BusinessDescription").removeClass('ui-autocomplete-loading');
            }
        });@*.keypress(function (e) {
            if (e.which === 13)
                window.location = '@Url.Action("Index")?q=' + this.value;
        });*@
            

        $("#OwnerFirstName").autocomplete({
            minLength: 2,
            source: '@Url.Action("firstName","DBECompany")',
            select: function (event, ui) {
                if (ui.item.data)
                    $("#currentOwnerFirstName").val(ui.item.data);
            },
            error: function (data) {
                $("#OwnerFirstName").removeClass('ui-autocomplete-loading');
            }
        });@*.keypress(function (e) {
            if (e.which === 13)
                window.location = '@Url.Action("Index")?q=' + this.value;
        });*@


        $("#OwnerLastName").autocomplete({
            minLength: 2,
            source: '@Url.Action("lastname","DBECompany")',
            select: function (event, ui) {
                if (ui.item.data)
                    $("#currentOwnerLastName").val(ui.item.data);
            },
            error: function (data) {
                $("#OwnerLastName").removeClass('ui-autocomplete-loading');
            }
        });@*.keypress(function (e) {
            if (e.which === 13)
                window.location = '@Url.Action("Index")?q=' + this.value;
        });*@


        $("#AreaCode").autocomplete({
            minLength: 3,
            source: '@Url.Action("GetAreaCode","DBECompany")',
            select: function (event, ui) {
                if (ui.item.data)
                    $("#AreaCode").val(ui.item.data);
            },
            error: function (data) {
                $("#AreaCode").removeClass('ui-autocomplete-loading');
            }
        });@*.keypress(function (e) {
            if (e.which === 13)
                window.location = '@Url.Action("Index")?q=' + this.value;
        });*@


        $("#City").autocomplete({
            delay: 0,
            minLength: 2,
            source: '@Url.Action("cities","DBECompany")',
            select: function (event, ui) {
                if (ui.item.data)
                    $("#city").val(ui.item.data.City);
            },
            error: function (data) {
                $("#City").removeClass('ui-autocomplete-loading');
            }
        }).keypress(function (e) {
            if (e.which === 13)
                window.location = '@Url.Action("Index")?q=' + this.value;
            });

    </script>
}
@ViewBag.message
@using (Html.BeginForm("ExportDatatoExcel", "DBECompany", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(model => model.CompanyId, new { id = "currentCompanyId" })
    <section>
        <div class="panel panel-group hidden-print">
            <div class="panel panel-primary">
                <div class="panel-body panel-default">
                    <p style="color:#474747;font-family:Arial"><b>Welcom to the Arkansas Department of Transportation's DBE Search Site.</b></p>
                    <p><b>For more information, please visit <a href="http://www.arkansashighways.com" , target="_blank">Arkansas Department of Transportation.</a></b></p>
                    @*<a href="http://www.arkansashighways.com/ProgCon/letting/dbedirectory.pdf" , target="_blank">Link to Arkansas PDF</a><br />
        <a href="https://txdot.txdotcms.com/?TN=txdot" , target="_blank">TxDOT Directory Search Page</a>*@
                </div>
            </div>
         </div>
    </section>
        <div>
            <div class="panel panel-group hidden-print">
                <div class="panel panel-primary">
                    <div class="panel-heading"><b>Search by Certification Type</b></div>
                    <div class="panel-body">
                        <div class="col-lg-12">
                            <div class="row"><b>@Html.CheckBoxFor(model => model.ACDBE, new { @checked = "checked" })@Html.LabelFor(model => model.ACDBE)</b></div>
                            <div class="row"><b>@Html.CheckBoxFor(model => model.DBE, new { @checked = "checked" })  @Html.LabelFor(model => model.DBE)</b></div>
                            <div class="row"><b>@Html.CheckBoxFor(model => model.MBE, new { @checked = "checked" })  @Html.LabelFor(model => model.MBE)</b></div>
                            <div class="row"><b>@Html.CheckBoxFor(model => model.SBP, new { @checked = "checked" })  @Html.LabelFor(model => model.SBP)</b></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="panel panel-group hidden-print">
                <div class="panel panel-primary">
                    <div class="panel-heading"><b>Search by Company/DBA Name or Business Services Provided</b></div>
                        <div class="panel-body">
                            <div class="col-sm-11">
                                <div class="form-inline">
                                    <div class="row">
                                        <b>@Html.LabelFor(model => model.Company,new { style = "width:142px;" })
                                           @Html.TextBoxFor(model => model.Company, null, new { @class = "form-control", style = "width:300px;" })
                                           @Html.HiddenFor(model => model.CompanyId)
                                        </b>(Enter a few letters of company/DBA name.)
                                    </div>
                                </div>
                                <div class="form-inline">
                                    <div class="row">
                                        <b>@Html.LabelFor(model => model.BusinessDescription)
                                           @Html.TextBoxFor(model => model.BusinessDescription, null, new { @class = "form-control", style = "width:300px;" })
                                           @Html.HiddenFor(model => model.BusinessDescription, new { @id = "currentBusinessDescription" })
                                           </b>(Enter a few letters of company's services.)
                                    </div>
                                </div>  
                            </div>
                        </div>
                </div>
            </div>
        <div class="panel panel-group hidden-print">
            <div class="panel panel-primary">
                <div class="panel-heading"><b>Search by Departmental and NAICS Work Classification Codes</b></div>
                <div class="panel-body">
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.NAICS)
                        @Html.DropDownListFor(model => model.NAICS, new MultiSelectList(ViewBag.NAICSList), new { multiple = "multiple", searchable = "Search here...", @class = "mdb-select sm-form colorful-select dropdown-primary", @id = "NAICSddl" })
                        <input type="button" class="btn btn-primary hidden-print" value="Clear Naics" onclick="clearNAICS()" />
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.ItemCode)
                        @Html.DropDownListFor(model => model.ItemCode, new MultiSelectList(ViewBag.ItemCodesList), new { multiple = "multiple", searchable = "Search here...", @class = "mdb-select sm-form colorful-select dropdown-primary", @id = "Itemddl" })
                        <input type="button" class="btn btn-primary hidden-print" value="Clear Item Codes" onclick="clearItemCodes()" />
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-group hidden-print">
            <div class="panel panel-primary">
                <div class="panel-heading"><b>Search by Contact Person</b></div>
                    <div class="panel-body">
                        <div class="col-sm-12">
                            <div class="form-inline">
                                <div class="row">
                                    @Html.LabelFor(model => model.OwnerFirstName)
                                    @Html.TextBoxFor(model => model.OwnerFirstName, null, new { @class = "form-control", style = "width:300px;" })
                                    @Html.HiddenFor(model => model.OwnerFirstName, new { @id = "currentOwnerFirstName" })
                                    (Begin typing a few letters of the contact's first name.)
                                </div>
                            </div>
                            <div class="form-inline">
                                <div class="row">
                                    @Html.LabelFor(model => model.OwnerLastName)
                                    @Html.TextBoxFor(model => model.OwnerLastName, null, new { @class = "form-control", style = "width:300px;" })
                                    @Html.HiddenFor(model => model.OwnerLastName, new { @id = "currentOwnerLastName" })
                                    (Begin typing a few letters of the contact's last name.)
                                </div>
                            </div>
                        </div>
                    </div>
            </div>
        </div>
        <div class="panel panel-group hidden-print">
            <div class="panel panel-primary">
                <div class="panel-heading"><b>Search for Companies by Location or ARDOT District</b></div>
                <div class="panel-body">                   
                        <div class="row my-auto">
                            <div class="col-lg-1"><b>@Html.LabelFor(model => model.Cities)</b></div>
                            <div class="col-lg-11">@Html.DropDownListFor(model => model.Cities, new MultiSelectList(ViewBag.CityList), new { @Name = "Cities[]", Multiple = true, @class = "Form-Control" })
                            <input type="button" class="btn btn-primary hidden-print" value="Clear Cities" onclick="clearCities()" style="width:130px"/>(Limit your search to specific cities.)</div>
                        </div>
                        <div class="row my-auto">
                            <div class="col-lg-1"><b>@Html.LabelFor(model => model.States)</b></div>
                            <div class="col-lg-11">@Html.DropDownListFor(model => model.States, new MultiSelectList(ViewBag.StateList), new { @Name = "States[]", Multiple = true, Class = "Form-Control" })
                            <input type="button" class="btn btn-primary hidden-print" value="Clear States" onclick="clearStates()" style="width:130px"/> (Limit your search to specific states. )</div> 
                        </div>
                        <div class="row my-auto">
                            <div class="col-lg-1"><b>@Html.LabelFor(model => model.OwnerZipCodes)</b></div>
                            <div class="col-lg-11">@Html.DropDownListFor(model => model.OwnerZipCodes, new MultiSelectList(ViewBag.ZipCodeList), new { @Name = "OwnerZipCodes[]", Multiple = true, @class = "Form-Control" })
                            <input type="button" class="btn btn-primary hidden-print" value="Clear Zips" onclick="clearOwnerZipCodes()" style="width:130px"/> (Limit your search to specific zip codes. )</div> 
                        </div>
                        <div class="row my-auto">
                            <div class="col-lg-1"><b>@Html.LabelFor(model => model.County)</b></div>
                            <div class="col-lg-11">@Html.DropDownListFor(model => model.County, new MultiSelectList(ViewBag.counties), new { @Name = "Counties[]", Multiple = true, @class = "Form-Control", @id = "Counties" })
                            <input type="button" class="btn btn-primary hidden-print" value="Clear Counties" onclick="clearCounties()" style="width:130px"/> (Limit your search to specific counties.)</div> 
                        </div>
                        <div class="row my-auto">
                            <div class="col-lg-1"><b>@Html.LabelFor(model => model.Districts)</b></div>
                            <div class="col-lg-11">@Html.DropDownListFor(model => model.Districts, new MultiSelectList(ViewBag.Districts), new { @Name = "Districts[]", Multiple = true, @class = "Form-Control", @id = "Districts" }) <input type="button" class="btn btn-primary hidden-print" value="Clear Districts" onclick="clearDistricts()" style="width:130px" /> (Limit your search to specifics districts. )</div> 
                        </div>
                        <div class="row my-auto">
                            <div class="col-lg-1"><b>@Html.LabelFor(model => model.AreaCode)</b></div>                           
                            <div class="col-lg-11">@Html.TextBoxFor(model => model.AreaCode, null, new { @class = "form-control", style="width: 100px;" })</div>                     
                        </div>                    
                </div>
            </div>
        </div>
        </div>
        <div style="text-align: center">

            <input type="submit" name="ExportToExcel" value="Full DBE Directory to Excel" class="btn btn-primary hidden-print" />

            <input type="button" class="btn btn-primary hidden-print" value="RESET PAGE" onclick="clearform()" />

            <input id="Search" type="button" class="btn btn-primary hidden-print" value="SEARCH" />

        </div>
        <br />
        <p><div id="SearchResultsContainer"></div></p>
}
